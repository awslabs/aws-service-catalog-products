# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Creates a Lambda-backed custom resource which will assume a role in the hub account and register itself

Parameters:
    HubEnablerFunctionRole:
      Type: String
      Description: ARN of the GuardDuty role in the hub that GuardDutyRegisterFunction will assume into
    GuardDutyAssumableOrgRoleArn:
      Type: String
      Description: ARN of the Organizations role in the root that GuardDutyRegisterFunction will assume into
    HubAccountID:
      Type: String
      Description: The AccountID of the guardduty hub account
    ResourcePrefix:
      Description: "Groups resources under a single prefix"
      Type: String
      Default: "sc-admin-product"

Resources:
  GuardDutyRegisterFunction:
    Type: AWS::Serverless::Function
    Description: |
      A lambda function that will find/create guardduty detector then register itself in the hub and send an invite
    Properties:
      Runtime: python3.7
      Handler: lambda_handler.handler
      CodeUri: ./src/register
      FunctionName: !Sub ${ResourcePrefix}-GuardDutyRegister
      Role: !GetAtt LambdaRole.Arn
      Timeout: 900

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "GuardDutyRegister"
      Path: !Sub "/${ResourcePrefix}/"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: GuardDutyRegister
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - guardduty:AcceptInvitation
              - guardduty:ListDetectors
              - guardduty:CreateDetector
              - guardduty:ListInvitations
              - guardduty:DisassociateFromMasterAccount
              - guardduty:DeleteInvitations
              - iam:CreateServiceLinkedRole
            Resource: '*'
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: !Ref GuardDutyAssumableOrgRoleArn
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: !Ref HubEnablerFunctionRole

  SpokeCustomResource:
    Type: Custom::RegisterGuardDuty
    Properties:
      ServiceToken: !GetAtt GuardDutyRegisterFunction.Arn
      AssumableHubRoleArn: !Ref HubEnablerFunctionRole
      SpokeAccountID: !Ref AWS::AccountId
      GuardDutyAssumableOrgRoleArn: !Ref GuardDutyAssumableOrgRoleArn
      HubAccountId: !Ref HubAccountID
