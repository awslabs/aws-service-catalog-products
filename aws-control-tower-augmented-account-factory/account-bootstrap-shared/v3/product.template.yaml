# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  Creates:
   - codebuild project that can be run to bootstrap an account
   - lambda function that can be used to back a custom resource so the codebuild project can be started from CloudFormation
    {"version": "v3", "framework": "servicecatalog-products", "role": "product", "product-set": "aws-control-tower-augmented-account-factory", "product": "account-bootstrap-shared"}

Parameters:
  PuppetAccountId:
    Type: String
    Description: Account id of the your puppet account
  PuppetVersion:
    Type: String
    Description: Version of puppet to use when bootstrapping a spoke

Resources:
  BootstrapperRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "BootstrapperRole"
      Path: /aws-control-tower-augmented-account-factory/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: AssumeIntoSpokes
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: arn:aws:iam::*:role/AWSControlTowerExecution

  BootstrapperProject:
    Type: AWS::CodeBuild::Project
    Description: |
      Wrapper project that:
        - installs aws-service-catalog-puppet
        - runs bootstrap-spoke-as
    Properties:
      Name: servicecatalog-puppet-single-account-bootstrapper
      Description: "Bootstraps an account for use with ServiceCatalog-Puppet"
      ServiceRole: !GetAtt BootstrapperRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref PuppetAccountId
          - Name: VERSION
            Type: PLAINTEXT
            Value: !Ref PuppetVersion
          - Name: ASSUMABLE_ROLE_IN_SPOKE_ACCOUNT
            Type: PLAINTEXT
            Value: CHANGE_ME
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.x
              commands:
                - pip install aws-service-catalog-puppet==${VERSION}
            build:
              commands:
                - servicecatalog-puppet bootstrap-spoke-as ${PUPPET_ACCOUNT_ID} ${ASSUMABLE_ROLE_IN_SPOKE_ACCOUNT}
      TimeoutInMinutes: 30

  BootstrapperProjectCustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /aws-control-tower-augmented-account-factory/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  BootstrapperProjectCustomResource:
    Type: AWS::Serverless::Function
    Description: |
      Lambda function that can be used to back a custom resource.  You can get the ARN by checking the SSM Parameter
      ```account-vending-bootstrapper-lambda```:
      ```yaml
      Account:
        Type: Custom::CustomResource
        Properties:
          ServiceToken: !Ref AccountVendingCreationLambda
          Email: !Ref Email
          AccountName: !Ref AccountName
          OrganizationAccountAccessRole: !Ref OrganizationAccountAccessRole
          IamUserAccessToBilling: !Ref IamUserAccessToBilling
          TargetOU: !Ref TargetOU
      ```
    Properties:
      FunctionName: account-bootstrapper
      CodeUri: ./src
      Handler: handler.handler
      Description: Lambda for accepting shares
      Role: !GetAtt BootstrapperProjectCustomResourceRole.Arn
      Runtime: python3.7
      Timeout: 900
      Environment:
        Variables:
          BOOTSTRAPPER_PROJECT_NAME: !Ref BootstrapperProject

Outputs:
  BootstrapperProjectCustomResourceArn:
    Description: |
      Outputs the BootstrapperProjectCustomResource Arn so others can use it
    Value: !GetAtt BootstrapperProjectCustomResource.Arn