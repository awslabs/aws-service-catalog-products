AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Creates a CloudWatch and static website dashboard that monitors service catalog factory/ puppet pipelines and provisioned products health"

Parameters:
  CIDRForDashboardAccess:
    Description: IP CIDR range which will be allowed to access the monitoring dashboard hosted on S3
    Type: String

Resources:
  # S3 Bucket for hosting the static website for monitoring dashboard
  S3StaticHostingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain # S3 bucket cannot be deleted when non empty
    Properties:
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  # Bucket policy for the S3 bucket hosting the static website
  StaticHostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: AllowSelectedIPSource
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join ["", [!GetAtt [S3StaticHostingBucket, Arn], "/*"]]
            Condition:
              IpAddress:
                aws:SourceIp:
                  - !Ref CIDRForDashboardAccess
      Bucket: !Ref S3StaticHostingBucket
  # Code build role for the static website
  StaticWebsiteBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /servicecatalog-monitoring/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: StaticWebsiteBuildPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - "sts:AssumeRole"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "codecommit:Get*"
                  - "codecommit:List*"
                  - "codecommit:GitPull"
                  - "s3:List*"
                  - "s3:Get*"
                  - "s3:PutObject"
                Effect: Allow
                Resource: "*"
  # Code build project for the static website
  BuildStaticWebsite:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Project to build the static website for the metrics dashboard
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
      ServiceRole: !GetAtt StaticWebsiteBuildRole.Arn
      Source:
        Type: CODECOMMIT
        Location: !Join
          - ""
          - - "https://git-codecommit."
            - !Ref "AWS::Region"
            - ".amazonaws.com/v1/repos/static-web-app"
      Artifacts:
        Type: S3
        Location: !Ref S3StaticHostingBucket
        Packaging: NONE
        EncryptionDisabled: true
        Name: "/"
  # Role for the CW event to invoke the code build
  CWEventInvokeStaticWebsiteBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /servicecatalog-monitoring/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CWEventPolicyForCodeBuild
          PolicyDocument:
            Statement:
              - Action:
                  - "sts:AssumeRole"
                  - "codebuild:StartBuild"
                Effect: Allow
                Resource: "*"
  # Event for triggering the code build project
  StaticWebsiteEventRole:
    Type: AWS::Events::Rule
    Properties:
      Name: service-catalog-metrics-static-web-app
      Description: Event to detect a code change to trigger the code build project
      EventPattern:
        source:
          - "aws.codecommit"
        detail:
          referenceType:
            - branch
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - v1
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:static-web-app'
      Targets:
        - Id: "InvokeStaticWebAppBuild"
          Arn: !GetAtt BuildStaticWebsite.Arn
          RoleArn: !GetAtt CWEventInvokeStaticWebsiteBuildRole.Arn
Outputs:
  WebsiteURL:
    Value: !GetAtt [S3StaticHostingBucket, WebsiteURL]
    Description: URL for website hosted on S3
  S3BucketName:
    Value: !Ref S3StaticHostingBucket
    Description: Name of S3 bucket to hold website content
