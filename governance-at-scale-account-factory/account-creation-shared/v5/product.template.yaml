# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  This product creates an AWS Lambda function for backing custom resources to create an AWS Account
  {"framework": "servicecatalog-products", "role": "product", "product-set": "governance-at-scale-account-factory", "product": "account-creation-shared", "version": "v5"}

Parameters:
  GovernanceAtScaleAccountFactoryAccountCreationSharedOrgRoleArn:
    Type: String
    Description: |
      The ARN of the assumable role in the organization root account that is used to interact with AWS Organizations
  OrganizationAccountAccessRole:
    Type: String
    Default: OrganizationAccountAccessRole
    Description: |
      The name of the IAM Role used for cross account access for AWS Organizations
  GovernanceAtScaleAccountFactoryIAMRolePath:
    Description: The path to use for IAM roles in this template
    Type: String

Resources:
  AccountCustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: | 
        An IAM role that is used as the execution role for the AccountCustomResource 
        AWS Lambda function
      Path: !Ref GovernanceAtScaleAccountFactoryIAMRolePath
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ServiceCatalogActions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Ref GovernanceAtScaleAccountFactoryAccountCreationSharedOrgRoleArn
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  AccountCustomResource:
    Type: AWS::Serverless::Function
    Description: |
      An AWS Lambda function that creates an account when called using a CloudFormation Custom Resource:
      ```yaml
      Account:
        Type: Custom::CustomResource
        Description: A custom resource representing an AWS Account
        Properties:
          ServiceToken: !Ref AccountVendingCreationLambda
          Email: !Ref Email
          AccountName: !Ref AccountName
          IamUserAccessToBilling: !Ref IamUserAccessToBilling
          TargetOU: !Ref TargetOU
      ```
    Properties:
      CodeUri: ./src
      Handler: handler.handler
      Description: Lambda for creating AWS accounts
      Role: !GetAtt AccountCustomResourceRole.Arn
      Runtime: python3.7
      Timeout: 900
      Environment:
        Variables:
          ASSUMABLE_ROLE_IN_ROOT_ACCOUNT_ARN: !Ref GovernanceAtScaleAccountFactoryAccountCreationSharedOrgRoleArn
          ORGANIZATION_ACCOUNT_ACCESS_ROLE: !Ref OrganizationAccountAccessRole

Outputs:
  GovernanceAtScaleAccountFactoryAccountCreationCRArn:
    Description: |
      the Arn of the custom resource that can be used to create an account
    Value: !GetAtt AccountCustomResource.Arn