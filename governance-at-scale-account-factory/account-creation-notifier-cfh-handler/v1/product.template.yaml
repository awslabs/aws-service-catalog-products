# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: 2010-09-09
Description: |
  This product creates an AWS Lambda as a subscription to an SNS topic. 
  The Lambda function is used to relay messages from SNS to a custom HTTP POST endpoint
  {"framework": "servicecatalog-products", "role": "product", "product-set": "governance-at-scale-account-factory", "product": "account-creation-notifier-cfh-handler", "version": "v1"}

Parameters:
  AccountCreateUpdateNotifierTopicArn:
    Description: The ARN of the SNS topic to create the subscription for
    Type: String

  GovernanceAtScaleAccountFactoryIAMRolePath:
    Description: The path to use for IAM roles in this template
    Type: String

  GovernanceAtScaleAccountFactoryAccountCreateUpdateCFHHandlerIAMRoleName:
    Description: |
      The name to use for the IAM role that will be used for the AWS Lambda function
    Type: String

  CFHAccountCreateUpdatePostUrl:
    Description: URL to HTTP POST to when accounts are created
    Type: String

Resources:
  Subscription:
    Description: A subscription to the provided SNS topic that will trigger the Function AWS Lambda Function
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref AccountCreateUpdateNotifierTopicArn
      Endpoint: !GetAtt Function.Arn
      Protocol: lambda

  Permission:
    Description: The permission that allows the provided SNS topic to invoke the AWS Lambda function
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function
      Principal: "sns.amazonaws.com"
      SourceArn: !Ref AccountCreateUpdateNotifierTopicArn

  Function:
    Description: |
      An AWS Lambda function the relays messages from the provided SNS topic to the provided HTTP POST endpoint
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Timeout: 10
      Role: !GetAtt Role.Arn
      Runtime: python3.7
      Environment:
        Variables:
          POST_URL: !Ref CFHAccountCreateUpdatePostUrl

      Code:
        ZipFile: |
          import cfnresponse
          import boto3
          import os
          import json
          from urllib import request, parse
          import json

          def lambda_handler(event, context):
            for record in event.get('Records', []):
              message = json.dumps(record['Sns']['Message'])
              b = str(message).encode('utf-8')
              req =  request.Request(os.getenv("POST_URL"), data=b)
              req.add_header('Content-Type', 'application/json')
              resp = request.urlopen(req)
              print(resp.read().decode('utf-8'))

  Role:
    Type: AWS::IAM::Role
    Description: |
      An IAM role used as the execution role for the Function AWS Lambda function
    Properties:
      RoleName: !Ref GovernanceAtScaleAccountFactoryAccountCreateUpdateCFHHandlerIAMRoleName
      Path: !Ref GovernanceAtScaleAccountFactoryIAMRolePath
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
