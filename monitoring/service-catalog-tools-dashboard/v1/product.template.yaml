AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Creates a CloudWatch and static website dashboard that monitors service catalog factory/ puppet pipelines and provisioned products health"

Parameters:
  CIDRForDashboardAccess:
    Description: IP CIDR range which will be allowed to access the monitoring dashboard hosted on S3
    Type: String
Resources:
  # S3 Bucket for hosting the static website for monitoring dashboard
  S3StaticHostingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain # S3 bucket cannot be deleted when non empty
    Properties:
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  # Bucket policy for the S3 bucket hosting the static website
  StaticHostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: AllowSelectedIPSource
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join ["", [!GetAtt [S3StaticHostingBucket, Arn], "/*"]]
            Condition:
              IpAddress:
                aws:SourceIp:
                  - !Ref CIDRForDashboardAccess
      Bucket: !Ref S3StaticHostingBucket
  # Role for the build projects - Factory and Puppet
  DashboardCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /servicecatalog-monitoring/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SCFDashboardCodeBuildPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - sts:AssumeRole
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:GetAuthorizationToken
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - codecommit:GitPull
                  - codepipeline:ListPipelineExecutions
                  - ssm:GetParameter
                Effect: Allow
                Resource: "*"
              - Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  - !Join ["", [!GetAtt [S3StaticHostingBucket, Arn], "/*"]]
                  - !Join ["", [!GetAtt [S3StaticHostingBucket, Arn]]]
  # Creates a build project for exporting the SC products status
  PuppetPipelineBuildLogs:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: PuppetPipelineBuildLogs
      Description: Build project for exporting the SC products status
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
      ServiceRole: !GetAtt DashboardCodeBuildRole.Arn
      Source:
        Type: CODECOMMIT
        Location: !Join
          - ""
          - - "https://git-codecommit."
            - !Ref "AWS::Region"
            - ".amazonaws.com/v1/repos/ServiceCatalogPuppet"
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - pip install aws-service-catalog-puppet==0.18.0
            build:
              commands:
                - servicecatalog-puppet expand manifest.yaml
                - servicecatalog-puppet list-launches manifest-expanded.yaml --format json > list-launches.json
          artifacts:
            files:
              - list-launches.json
      Artifacts:
        Type: S3
        Location: !Ref S3StaticHostingBucket
        Name: assets
        Packaging: NONE
        EncryptionDisabled: true
  # Creates a build project for exporting the SC factory pipeline status
  FactoryPipelineBuildLogs:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: FactoryPipelineBuildLogs
      Description: Build project for exporting the SC factory pipelines status
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
      ServiceRole: !GetAtt DashboardCodeBuildRole.Arn
      Source:
        Type: CODECOMMIT
        Location: !Join
          - ""
          - - "https://git-codecommit."
            - !Ref "AWS::Region"
            - ".amazonaws.com/v1/repos/ServiceCatalogFactory"
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - pip install aws-service-catalog-factory==0.11.0
            build:
              commands:
                - servicecatalog-factory show-pipelines . --format json > show-pipelines.json
          artifacts:
            files:
              - show-pipelines.json
      Artifacts:
        Type: S3
        ArtifactIdentifier: outputArtifact
        Location: !Ref S3StaticHostingBucket
        Name: assets
        Packaging: NONE
        EncryptionDisabled: true
  # Custom Lambda resource to start the code build project for fetching the SC-F and SC-P metrics
  GetMetricLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/get_metric
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt GetMetricLambdaRole.Arn
      Runtime: python3.7
      Timeout: 500
      Environment:
        Variables:
          DEBUG_MODE: "true"
  # Lambda role for executing custom GetMetricLambdaFunction
  GetMetricLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /servicecatalog-monitoring/
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: GetSCFMetricsPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - codebuild:StartBuild
                Effect: Allow
                Resource: "*"
  # Puppet pipeline event invoked on success/ failure of servicecatalog-puppet-pipeline
  PuppetPipelineStatusEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: service-catalog-puppet-pipeline-metrics
      Description: Event to detect a successful/ failed execution of the service catalog puppet pipeline
      EventPattern:
        source:
          - "aws.codepipeline"
        detail-type:
          - "CodePipeline Pipeline Execution State Change"
        detail:
          pipeline:
            - "servicecatalog-puppet-pipeline"
          state:
            - "SUCCEEDED"
            - "FAILED"
      Targets:
        - Id: "PuppetPipelineMetric"
          Arn: !GetAtt "GetMetricLambdaFunction.Arn"
          Input: '{"ProjectName":"PuppetPipelineBuildLogs"}'
    DependsOn:
      - PuppetPipelineBuildLogs
  # Factory pipeline event invoked on success/ failure of servicecatalog-factory-pipeline
  FactoryPipelineStatusEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: service-catalog-factory-pipeline-metrics
      Description: Event to detect a successful/ failed execution of the service catalog factory pipeline
      EventPattern:
        source:
          - "aws.codepipeline"
        detail-type:
          - "CodePipeline Pipeline Execution State Change"
        detail:
          pipeline:
            - "servicecatalog-factory-pipeline"
          state:
            - "SUCCEEDED"
            - "FAILED"
      Targets:
        - Id: "FactoryPipelineMetric"
          Arn: !GetAtt "GetMetricLambdaFunction.Arn"
          Input: '{"ProjectName":"FactoryPipelineBuildLogs"}'
    DependsOn:
      - FactoryPipelineBuildLogs
  # Permission for the puppet event rule lambda invocation
  GetMetricPuppetLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt PuppetPipelineStatusEventRule.Arn
      FunctionName: !Ref GetMetricLambdaFunction
  # Permission for the factory event rule lambda invocation
  GetMetricFactoryLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt FactoryPipelineStatusEventRule.Arn
      FunctionName: !Ref GetMetricLambdaFunction
  # Custom Lambda resource to put the pipeline metrics into cloud watch
  PutMetricLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/put_metric
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt PutMetricLambdaRole.Arn
      Runtime: python3.7
      Timeout: 500
      Environment:
        Variables:
          DEBUG_MODE: "true"
  # Event to collect the CloudWatch dashboard metrics for service catalog factory and puppet pipelines
  SCFPipelinesEventForCWDashboard:
    Type: AWS::Events::Rule
    Properties:
      Name: service-catalog-pipelines-dashboard-metrics
      Description: Event to detect a successful/ failed or cancelled execution of the service catalog pipelines
      EventPattern:
        source:
          - "aws.codepipeline"
        detail-type:
          - "CodePipeline Pipeline Execution State Change"
        detail:
          pipeline:
            - "servicecatalog-factory-pipeline"
            - "servicecatalog-puppet-pipeline"
          state:
            - "SUCCEEDED"
            - "FAILED"
            - "CANCELED"
      Targets:
        - Id: "PutMetricLambda"
          Arn: !GetAtt "PutMetricLambdaFunction.Arn"
  # Permission for the SCF event rule lambda invocation
  PutMetricLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt SCFPipelinesEventForCWDashboard.Arn
      FunctionName: !Ref PutMetricLambdaFunction
  # Lambda role for executing custom PutMetricLambdaFunction
  PutMetricLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /servicecatalog-monitoring/
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: PutSCFMetricsPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - cloudwatch:PutMetricData
                Effect: Allow
                Resource: "*"
  # Dashboard for viewing the metrics for the pipelines
  ServiceCatalogFoundationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: Service-Catalog-Foundation-Dashboard
      DashboardBody: !Sub |
        {
            "widgets": [
                {
                    "type": "metric",
                    "x": 0,
                    "y": 0,
                    "width": 12,
                    "height": 3,
                    "properties": {
                        "metrics": [
                            [ "Service Catalog Foundation", "SucceededExecutions", "By Pipelines", "servicecatalog-factory-pipeline" ],
                            [ ".", "FailedExecutions", ".", "." ],
                            [ ".", "CancelledExecutions", ".", "." ]
                        ],
                        "view": "singleValue",
                        "region": "${AWS::Region}",
                        "stat": "Sum",
                        "period": 300,
                        "setPeriodToTimeRange": true,
                        "title": "Service Catalog Factory Pipeline Counts"
                    }
                },
                {
                    "type": "metric",
                    "x": 12,
                    "y": 0,
                    "width": 12,
                    "height": 3,
                    "properties": {
                        "metrics": [
                            [ "Service Catalog Foundation", "SucceededExecutions", "By Pipelines", "servicecatalog-puppet-pipeline" ],
                            [ ".", "FailedExecutions", ".", "." ],
                            [ ".", "CancelledExecutions", ".", "." ]
                        ],
                        "view": "singleValue",
                        "region": "${AWS::Region}",
                        "setPeriodToTimeRange": true,
                        "title": "Service Catalog Puppet Pipeline Counts",
                        "period": 300,
                        "stat": "Sum"
                    }
                },
                {
                    "type": "metric",
                    "x": 0,
                    "y": 3,
                    "width": 12,
                    "height": 6,
                    "properties": {
                        "metrics": [
                            [ "Service Catalog Foundation", "SucceededExecutions", "By Pipelines", "servicecatalog-factory-pipeline" ],
                            [ ".", "FailedExecutions", ".", "." ],
                            [ ".", "CancelledExecutions", ".", "." ]
                        ],
                        "view": "timeSeries",
                        "stacked": false,
                        "region": "${AWS::Region}",
                        "stat": "Sum",
                        "period": 900,
                        "legend": {
                            "position": "right"
                        },
                        "title": "Service Catalog Factory Pipeline Time Series"
                    }
                },
                {
                    "type": "metric",
                    "x": 12,
                    "y": 3,
                    "width": 12,
                    "height": 6,
                    "properties": {
                        "metrics": [
                            [ "Service Catalog Foundation", "SucceededExecutions", "By Pipelines", "servicecatalog-puppet-pipeline" ],
                            [ ".", "FailedExecutions", ".", "." ],
                            [ ".", "CancelledExecutions", ".", "." ]
                        ],
                        "view": "timeSeries",
                        "stacked": false,
                        "region": "${AWS::Region}",
                        "legend": {
                            "position": "right"
                        },
                        "yAxis": {
                            "right": {
                                "label": ""
                            }
                        },
                        "title": "Service Catalog Puppet Pipeline Time Series",
                        "period": 300,
                        "stat": "Sum"
                    }
                }
            ]
        }
Outputs:
  WebsiteURL:
    Value: !GetAtt [S3StaticHostingBucket, WebsiteURL]
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join ["", ["https://", !GetAtt [S3StaticHostingBucket, DomainName]]]
    Description: Name of S3 bucket to hold website content
  FactoryBuildProject:
    Description: Build project for the SC-F pipeline statistics
    Value: !Ref FactoryPipelineBuildLogs
  PuppetBuildProject:
    Description: Build project for the SC-P pipeline statistics
    Value: !Ref PuppetPipelineBuildLogs
