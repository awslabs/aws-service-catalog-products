AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Creates a Cloudwatch events rule that triggers a Codebuild project to export all logs from a failed/cancelled/superseded Service Catalog Puppet pipeline execution. Provides a pre-signed S3 url at the end of execution
  {"framework": "servicecatalog-products", "role": "product", "product-category": "operations", "product-set": "service-catalog-puppet-pipeline-logs-exporter", "product": "service-catalog-puppet-pipeline-logs-exporter", "version": "v1"}

Parameters:
  pServiceCatalogPuppetLogsExporterCodeBuildEnvVersion:
    Type: String
    Description: Version of Codebuild Environment Version
    Default: '5.0'
  pServiceCatalogPuppetLogsExporterExportExpiresIn:
    Type: String
    Description: Time in seconds that the Pre-signed S3 link expires in, default is 3600 (one hour)
    Default: '3600'
  ServiceCatalogPuppetLogsExporterCloudWatchRoleName:
    Type: String
    Default: scpuppet-logs-cloudwatch-role
  ServiceCatalogPuppetLogsExporterCloudWatchRolePath:
    Type: String
    Default: /operations/servicecatalog-puppet-logs-export/

Resources:
  rS3Bucket:
    Type: AWS::S3::Bucket
    Description: "S3 Bucket for pipeline logs"
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub scpuppet-logs-${AWS::Region}-${AWS::AccountId}
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256

  rServiceCatalogPuppetLogsExporterCloudWatchRole:
      Type: AWS::IAM::Role
      Description: "Cloudwatch role associated with events rule to catch jobs in cancelled/failed/superseded state"
      Properties:
        RoleName: !Ref ServiceCatalogPuppetLogsExporterCloudWatchRoleName
        Path: !Ref ServiceCatalogPuppetLogsExporterCloudWatchRolePath
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service: [events.amazonaws.com]
              Action: ["sts:AssumeRole"]
        Description: Role for Cloudwatch to publish to codecommit backup bucket
        Policies:
          - PolicyName: CwForwardEventPolicy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - codebuild:StartBuild
                  Resource:
                    - !GetAtt rCodeBuildProject.Arn
  rCloudwatchRule:
    Type: AWS::Events::Rule
    Description: "Cloudwatch events rule to grab servicecatalog puppet pipeline execution on failure/cancellation/superseded state"
    Properties:
      Description: Cloudwatch events rule to grab servicecatalog puppet pipeline execution on failure/cancellation/superseded state
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Pipeline Execution State Change
        detail:
          state:
            - FAILED
            - CANCELED
            - SUPERSEDED
          pipeline: 
            - servicecatalog-puppet-pipeline
          
      Targets:
      - 
        Arn: !GetAtt rCodeBuildProject.Arn
        Id: codebuild-trigger-logs
        RoleArn: !GetAtt rServiceCatalogPuppetLogsExporterCloudWatchRole.Arn
        InputTransformer:
          InputPathsMap: {"State":"$.detail.state","executionid":"$.detail.execution-id","detailtype":"$.detail-type"}
          InputTemplate: |
              {"environmentVariablesOverride": [
                    {
                        "name": "State",
                        "value": <State>
                    },
                    {
                        "name": "EXECUTION_ID",
                        "value": <executionid>
                    },
                    {
                        "name": "DETAIL_TYPE",
                        "value": <detailtype>
                    }
              ]}

  rCodeBuildLogs:
    Type: AWS::Logs::LogGroup
    Description: "LogGroup for storing Codebuild logs"
    Properties:
      LogGroupName: /aws/codebuild/scpuppet-build-pipeline-logs
      RetentionInDays: 7 

  rCodeBuildRole:
    Type: AWS::IAM::Role
    Description: "Service role for Codebuild"
    DependsOn: rCodeBuildLogs
    Properties:
      RoleName: scpuppet-logs-codebuild-role
      Path: /foundational/servicecatalog-puppet-logs-export/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      MaxSessionDuration: 43200
      Policies:
        - PolicyName: codebuildservicerole-permissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Sub 'arn:aws:s3:::scpuppet-logs-${AWS::Region}-${AWS::AccountId}/*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt rCodeBuildLogs.Arn
              - Effect: Allow
                Action: 
                  - logs:GetLogEvents
                Resource: 
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/servicecatalog-puppet*:log-stream:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Sub arn:aws:s3:::codepipeline-${AWS::Region}-*
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/scpuppet-logs-pipeline*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/servicecatalog-puppet*
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/service-catalog-puppet-version
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/servicecatalog-puppet/PuppetRole
              - Effect: Allow
                Action:
                  - codepipeline:ListActionExecutions 
                Resource: 
                 - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:servicecatalog-puppet-pipeline
        
  rCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: 
      - rCodeBuildRole
      - rS3Bucket
    Properties:
      Name: scpuppet-logs-pipeline
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref rCodeBuildLogs
          Status: ENABLED
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub aws/codebuild/standard:${pServiceCatalogPuppetLogsExporterCodeBuildEnvVersion}
        EnvironmentVariables:
          - Name: S3Bucket
            Type: PLAINTEXT
            Value: !Ref rS3Bucket
          - Name: PuppetVersion
            Type: PARAMETER_STORE
            Value: service-catalog-puppet-version
          - Name: ExportExpiresIn
            Type: PLAINTEXT
            Value: !Ref pServiceCatalogPuppetLogsExporterExportExpiresIn
      ServiceRole: !GetAtt rCodeBuildRole.Arn
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - pip install aws-service-catalog-puppet==$PuppetVersion
            build:
              commands:
                - env
                - echo "Pipeline state is $State"
                - dt=$(date '+%d-%m-%Y-%H:%M:%S');
                - echo $dt
                - servicecatalog-puppet export-puppet-pipeline-logs $EXECUTION_ID
                - logbundle=servicecatalogpuppet-pipelinelogs-$dt.zip
                - zip $logbundle log-servicecatalog*.log
                - echo "Pre-signing S3 URL"
                - aws s3 presign s3://$S3Bucket/logs/$logbundle --expires-in $ExportExpiresIn
          artifacts: 
            files:
             - $logbundle
      Artifacts:
        Type: S3
        Location: !Ref rS3Bucket
        Name: logs
        Packaging: NONE
        EncryptionDisabled: false

Outputs: 
  oS3Bucket: 
    Description: S3 Bucket that is a location for log exports
    Value: !Ref rS3Bucket
  oServiceCatalogPuppetLogsExporterCloudWatchRoleArn:
    Description: Arn for Cloudwatch Role 
    Value: !GetAtt rServiceCatalogPuppetLogsExporterCloudWatchRole.Arn
  oCodebuildProject:
    Description: Codebuild project that exports puppet pipeline logs
    Value: !Ref rCodeBuildProject
  oCodebuildRoleArn:
    Description: Codebuild Role Arn
    Value: !GetAtt rCodeBuildRole.Arn
